}
new_text
text
text <- "Ah nigham ekker yougi ezahriw yarwa arayis yougi ad yarwou thagouni"
nchar(text)
text <- "Ah nigham ekker yougi ezahriw yarwa arayis yougi ad yarwou thagouni oudhagh tlouv i yiriw"
nchar(text)
## ---------------------------------------------------------
text <- "Ah nigham ekker yougi ezahriw yarwa arayis yougi ad yarwou thagouni oudhagh tlouv i yiriw"
nchar(text)
text_split <- unlist(strsplit(text," "))
new_text <- ""
nb_char_max <- 70
for(t in text_split) {
nb_char <- nchar(new_text)
new_text <- paste(new_text,t)
print(paste("Nb de charactères : ",nb_char))
if(nb_char >nb_char_max & nb_char < 75) {
print("yes")
new_text_formated <- stringr::str_remove(new_text,t)
new_text <- paste0(new_text_formated,"\n",t)
}
}
new_text
text
## ---------------------------------------------------------
text <- "Ah nigham ekker yougi ezahriw yarwa arayis yougi ad yarwou thagouni oudhagh tlouv i yiriw"
nchar(text)
text_split <- unlist(strsplit(text," "))
new_text <- ""
nb_char_max <- 70
for(t in text_split) {
nb_char <- nchar(new_text)
new_text <- paste(new_text,t)
print(paste("Nb de charactères : ",nb_char))
if(nb_char >nb_char_max & nb_char < 75) {
print("yes")
new_text_formated <- stringr::str_remove(new_text,t)
new_text <- paste0(new_text_formated,"\n",t)
}
}
new_text
text
## ---------------------------------------------------------
text <- "Ah nigham ekker yougi ezahriw yarwa arayis yougi ad yarwou thagouni oudhagh tlouv i yiriw"
nchar(text)
text_split <- unlist(strsplit(text," "))
new_text <- ""
nb_char_max <- 70
for(t in text_split) {
nb_char <- nchar(new_text)
new_text <- paste(new_text,t)
print(paste("Nb de charactères : ",nb_char))
if(nb_char >nb_char_max & nb_char < 80) {
print("yes")
new_text_formated <- stringr::str_remove(new_text,t)
new_text <- paste0(new_text_formated,"\n",t)
}
}
new_text
text
text
new_text
## ---------------------------------------------------------
text <- "Ah nigham ekker yougi ezahriw yarwa arayis yougi ad yarwou thagouni oudhagh tlouv i yiriw"
nchar(text)
text_split <- unlist(strsplit(text," "))
new_text <- ""
nb_char_max <- 50
for(t in text_split) {
nb_char <- nchar(new_text)
new_text <- paste(new_text,t)
print(paste("Nb de charactères : ",nb_char))
if(nb_char >nb_char_max & nb_char < 80) {
print("yes")
new_text_formated <- stringr::str_remove(new_text,t)
new_text <- paste0(new_text_formated,"\n",t)
}
}
new_text
text
## ---------------------------------------------------------
text <- "Ah nigham ekker yougi ezahriw yarwa arayis yougi ad yarwou thagouni oudhagh tlouv i yiriw"
nchar(text)
text_split <- unlist(strsplit(text," "))
new_text <- ""
nb_char_max <- 50
for(t in text_split) {
nb_char <- nchar(new_text)
new_text <- paste(new_text,t)
print(paste("Nb de charactères : ",nb_char))
if(nb_char >nb_char_max & nb_char < 60) {
print("yes")
new_text_formated <- stringr::str_remove(new_text,t)
new_text <- paste0(new_text_formated,"\n",t)
}
}
new_text
text
## ---------------------------------------------------------
text <- "Ah nigham ekker yougi ezahriw yarwa arayis yougi ad yarwou thagouni oudhagh tlouv i yiriw"
nchar(text)
text_split <- unlist(strsplit(text," "))
new_text <- ""
nb_char_max <- 50
for(t in text_split) {
nb_char <- nchar(new_text)
new_text <- ifelse(new_text == "",
paste0(new_text,t)
paste(new_text,t))
print(paste("Nb de charactères : ",nb_char))
if(nb_char >nb_char_max & nb_char < 60) {
print("yes")
new_text_formated <- stringr::str_remove(new_text,t)
new_text <- paste0(new_text_formated,"\n",t)
}
}
new_text
text
## ---------------------------------------------------------
text <- "Ah nigham ekker yougi ezahriw yarwa arayis yougi ad yarwou thagouni oudhagh tlouv i yiriw"
nchar(text)
text_split <- unlist(strsplit(text," "))
new_text <- ""
nb_char_max <- 50
for(t in text_split) {
nb_char <- nchar(new_text)
new_text <- paste(new_text,t)
print(paste("Nb de charactères : ",nb_char))
if(nb_char >nb_char_max & nb_char < 60) {
print("yes")
new_text_formated <- stringr::str_remove(new_text,t)
new_text <- paste0(new_text_formated,"\n",t)
}
}
new_text
text
## ---------------------------------------------------------
text <- "Ah nigham ekker yougi ezahriw yarwa arayis yougi ad yarwou thagouni oudhagh tlouv i yiriw"
nchar(text)
text_split <- unlist(strsplit(text," "))
new_text <- ""
nb_char_max <- 50
for(t in text_split) {
nb_char <- nchar(new_text)
new_text <- paste(new_text,t)
print(paste("Nb de charactères : ",nb_char))
if(nb_char >nb_char_max & nb_char < 60) {
print("yes")
new_text_formated <- stringr::str_remove(new_text,t)
new_text <- paste0(new_text_formated,"\n",t)
new_text <- substr(new_text,1,nchar(new_text))
}
}
new_text
text
## ---------------------------------------------------------
text <- "Ah nigham ekker yougi ezahriw yarwa arayis yougi ad yarwou thagouni oudhagh tlouv i yiriw"
nchar(text)
text_split <- unlist(strsplit(text," "))
new_text <- ""
nb_char_max <- 50
for(t in text_split) {
nb_char <- nchar(new_text)
new_text <- paste(new_text,t)
print(paste("Nb de charactères : ",nb_char))
if(nb_char >nb_char_max & nb_char < 60) {
print("yes")
new_text_formated <- stringr::str_remove(new_text,t)
new_text <- paste0(new_text_formated,"\n",t)
}
new_text <- substr(new_text,1,nchar(new_text))
}
new_text
text
substr(new_text,1,nchar(new_text))
substr(new_text,2,nchar(new_text))
## ---------------------------------------------------------
text <- "Ah nigham ekker yougi ezahriw yarwa arayis yougi ad yarwou thagouni oudhagh tlouv i yiriw"
nchar(text)
text_split <- unlist(strsplit(text," "))
new_text <- ""
nb_char_max <- 50
for(t in text_split) {
nb_char <- nchar(new_text)
new_text <- paste(new_text,t)
print(paste("Nb de charactères : ",nb_char))
if(nb_char >nb_char_max & nb_char < 60) {
print("yes")
new_text_formated <- stringr::str_remove(new_text,t)
new_text <- paste0(new_text_formated,"\n",t)
}
new_text <- substr(new_text,2,nchar(new_text))
}
new_text
text
## ---------------------------------------------------------
text <- "Ah nigham ekker yougi ezahriw yarwa arayis yougi ad yarwou thagouni oudhagh tlouv i yiriw"
nchar(text)
text_split <- unlist(strsplit(text," "))
new_text <- ""
nb_char_max <- 50
for(t in text_split) {
nb_char <- nchar(new_text)
new_text <- paste(new_text,t)
print(paste("Nb de charactères : ",nb_char))
if(nb_char >nb_char_max & nb_char < 60) {
print("yes")
new_text_formated <- stringr::str_remove(new_text,t)
new_text <- paste0(new_text_formated,"\n",t)
}
}
new_text
text
## ---------------------------------------------------------
text <- "Kecci jkdesd sefsd dse deeqffqsrgc cxhjghjlkdf desf"
nchar(text)
text_split <- unlist(strsplit(text," "))
new_text <- ""
nb_char_max <- 50
for(t in text_split) {
nb_char <- nchar(new_text)
new_text <- paste(new_text,t)
print(paste("Nb de charactères : ",nb_char))
if(nb_char >nb_char_max & nb_char < 60) {
print("yes")
new_text_formated <- stringr::str_remove(new_text,t)
new_text <- paste0(new_text_formated,"\n",t)
}
}
new_text
text
## ---------------------------------------------------------
text <- "Kecci jkdesd sefsd dse deeqffqsrgc cxhjghjlkdf desf dszeq"
nchar(text)
text_split <- unlist(strsplit(text," "))
new_text <- ""
nb_char_max <- 50
for(t in text_split) {
nb_char <- nchar(new_text)
new_text <- paste(new_text,t)
print(paste("Nb de charactères : ",nb_char))
if(nb_char >nb_char_max & nb_char < 60) {
print("yes")
new_text_formated <- stringr::str_remove(new_text,t)
new_text <- paste0(new_text_formated,"\n",t)
}
}
new_text
text
data.frame(name = c("a","b","c"),
v = seq(1:4))
data.frame(name = c("a","b","c"),
v = seq(1:3))
library(tidyverse)
data.frame(x = c("a","b","c"),
y = seq(1:3)) %>%
ggplot(aes(x=x,y=y)) +
geom_bar()
data.frame(x = c("a","b","c"),
y = seq(1:3)) %>%
ggplot(aes(x=x,y=y)) +
geom_bar(stat = "identity")
data.frame(x = c("a","b","c"),
y = seq(1:3)) %>%
ggplot(aes(x=x,y=y)) +
geom_bar(stat = "identity") +
theme_minimal()
data.frame(x = c("a","b","c"),
y = seq(1:3)) %>%
ggplot(aes(x=x,y=y)) +
geom_bar(stat = "identity") +
theme_minimal() +
labs(title = new_text)
## ---------------------------------------------------------
text <- "the problem with table is that it's more difficult to include it inside more complex calculus, for"
nchar(text)
text_split <- unlist(strsplit(text," "))
new_text <- ""
nb_char_max <- 50
for(t in text_split) {
nb_char <- nchar(new_text)
new_text <- paste(new_text,t)
print(paste("Nb de charactères : ",nb_char))
if(nb_char >nb_char_max & nb_char < 60) {
print("yes")
new_text_formated <- stringr::str_remove(new_text,t)
new_text <- paste0(new_text_formated,"\n",t)
}
}
new_text
text
library(tidyverse)
data.frame(x = c("a","b","c"),
y = seq(1:3)) %>%
ggplot(aes(x=x,y=y)) +
geom_bar(stat = "identity") +
theme_minimal() +
labs(title = new_text)
## ---------------------------------------------------------
text <- "the problem with table is that it's more difficult to include it inside more complex calculus, for"
nchar(text)
text_split <- unlist(strsplit(text," "))
new_text <- ""
nb_char_max <- 50
for(t in text_split) {
nb_char <- nchar(new_text)
new_text <- paste(new_text,t)
print(paste("Nb de charactères : ",nb_char))
if(nb_char >nb_char_max & nb_char < 55) {
print("yes")
new_text_formated <- stringr::str_remove(new_text,t)
new_text <- paste0(new_text_formated,"\n",t)
}
}
new_text
text
library(tidyverse)
data.frame(x = c("a","b","c"),
y = seq(1:3)) %>%
ggplot(aes(x=x,y=y)) +
geom_bar(stat = "identity") +
theme_minimal() +
labs(title = new_text)
## ---------------------------------------------------------
text <- "My preferred solution uses rle, which will return a value (the label"
nchar(text)
text_split <- unlist(strsplit(text," "))
new_text <- ""
nb_char_max <- 50
for(t in text_split) {
nb_char <- nchar(new_text)
new_text <- paste(new_text,t)
print(paste("Nb de charactères : ",nb_char))
if(nb_char >nb_char_max & nb_char < 55) {
print("yes")
new_text_formated <- stringr::str_remove(new_text,t)
new_text <- paste0(new_text_formated,"\n",t)
}
}
new_text
text
library(tidyverse)
data.frame(x = c("a","b","c"),
y = seq(1:3)) %>%
ggplot(aes(x=x,y=y)) +
geom_bar(stat = "identity") +
theme_minimal() +
labs(title = new_text)
## ---------------------------------------------------------
text <- "is there a way to count elements in a vector, without considering its unique values? For example, I have a vector"
nchar(text)
text_split <- unlist(strsplit(text," "))
new_text <- ""
nb_char_max <- 50
for(t in text_split) {
nb_char <- nchar(new_text)
new_text <- paste(new_text,t)
print(paste("Nb de charactères : ",nb_char))
if(nb_char >nb_char_max & nb_char < 55) {
print("yes")
new_text_formated <- stringr::str_remove(new_text,t)
new_text <- paste0(new_text_formated,"\n",t)
}
}
new_text
text
library(tidyverse)
data.frame(x = c("a","b","c"),
y = seq(1:3)) %>%
ggplot(aes(x=x,y=y)) +
geom_bar(stat = "identity") +
theme_minimal() +
labs(title = new_text)
library(tidyverse)
str_replace_all("P S S T F R P P P A R"," ")
str_replace_all("P S S T F R P P P A R"," R")
str_replace_all("P S S T F R P P P A R"," ","")
str_replace_all("FR81 2004 1000 0166 6833 3U02 044"," ","")
setwd("Documents/dev/cdv_vis/src/db/")
library(jsonlite)
library(readxl)
library(sf)
actions_init <- read_excel("2020_-_base_37460_actions_avec_beneficiaires.xlsx")
cdv_geom <- st_read("cv_nb_projets.gpkg") %>%
select(code_cv,lib_cv) %>%
st_transform(4326)
actions_temp <- actions_init %>%
rename_all(make.names) %>%
rename_all(tolower)
actions <- actions_temp %>%
select(numéro.de.l.action.prj,
libellé.de.l.action,
raison.sociale.longue,
type.de.tiers,
code.contrat.ville,
libellé.contrat.ville,
thème,
sous.thèmes,
région) %>%
rename(id_action = numéro.de.l.action.prj, lib_action= libellé.de.l.action,
raison_sociale = raison.sociale.longue, type_tiers = type.de.tiers,
code_cv=code.contrat.ville,lib_cv=libellé.contrat.ville,
theme=thème,sous_theme=sous.thèmes,
échelle=région) %>%
filter(!is.na(code_cv))
actions_json <- toJSON(actions)
actions <- actions_temp %>%
select(numéro.de.l.action.prj,
libellé.de.l.action,
raison.sociale.longue,
type.de.tiers,
code.contrat.ville,
libellé.contrat.ville,
thème,
sous.thèmes,
région) %>%
rename(id_action = numéro.de.l.action.prj, lib_action= libellé.de.l.action,
raison_sociale = raison.sociale.longue, type_tiers = type.de.tiers,
code_cv=code.contrat.ville,lib_cv=libellé.contrat.ville,
theme=thème,sous_theme=sous.thèmes,
échelle=région) %>%
filter(!is.na(code_cv))
setwd("Documents/dev/cdv_vis/src/db/")
library(jsonlite)
library(readxl)
library(sf)
library(dplyr)
actions_init <- read_excel("2020_-_base_37460_actions_avec_beneficiaires.xlsx")
cdv_geom <- st_read("cv_nb_projets.gpkg") %>%
select(code_cv,lib_cv) %>%
st_transform(4326)
actions_temp <- actions_init %>%
rename_all(make.names) %>%
rename_all(tolower)
actions <- actions_temp %>%
select(numéro.de.l.action.prj,
libellé.de.l.action,
raison.sociale.longue,
type.de.tiers,
code.contrat.ville,
libellé.contrat.ville,
thème,
sous.thèmes,
région) %>%
rename(id_action = numéro.de.l.action.prj, lib_action= libellé.de.l.action,
raison_sociale = raison.sociale.longue, type_tiers = type.de.tiers,
code_cv=code.contrat.ville,lib_cv=libellé.contrat.ville,
theme=thème,sous_theme=sous.thèmes,
échelle=région) %>%
filter(!is.na(code_cv))
actions_json <- toJSON(actions)
st_write(cdv_geom,"../assets/cv_geom.geojson",delete_dsn = T)
write_json(,"../assets/actions_financees.json")
write_json(actions_json,"../assets/actions_financees.json")
install.packages("rjson")
library(rjson)
actions_json <- toJSON(actions)
write_json(actions_json,"../assets/actions_financees.json")
actions_json <- toJSON(list(actions))
actions_json <- toJSON(list(actions),pretty = TRUE)
library(jsonlite)
actions_json <- toJSON(list(actions),pretty = TRUE)
actions_json <- toJSON(list(actions))
write_json(actions_json,"../assets/actions_financees.json")
library(jsonlite)
library(readxl)
library(sf)
library(dplyr)
actions_init <- read_excel("2020_-_base_37460_actions_avec_beneficiaires.xlsx")
actions_temp <- actions_init %>%
rename_all(make.names) %>%
rename_all(tolower)
actions <- actions_temp %>%
select(numéro.de.l.action.prj,
libellé.de.l.action,
raison.sociale.longue,
type.de.tiers,
code.contrat.ville,
libellé.contrat.ville,
thème,
sous.thèmes,
mt.engagé,
région) %>%
rename(id_action = numéro.de.l.action.prj, lib_action= libellé.de.l.action,
raison_sociale = raison.sociale.longue, type_tiers = type.de.tiers,
code_cv=code.contrat.ville,lib_cv=libellé.contrat.ville,
theme=thème,sous_theme=sous.thèmes,
echelle=région,
montant=mt.engagé) %>%
filter(!is.na(code_cv))
actions <- actions_temp %>%
select(numéro.de.l.action.prj,
libellé.de.l.action,
raison.sociale.longue,
type.de.tiers,
code.contrat.ville,
libellé.contrat.ville,
thème,
sous.thèmes,
mt.engagé,
région) %>%
rename(id_action = numéro.de.l.action.prj, lib_action= libellé.de.l.action,
raison_sociale = raison.sociale.longue, type_tiers = type.de.tiers,
code_cv=code.contrat.ville,lib_cv=libellé.contrat.ville,
theme=thème,sous_theme=sous.thèmes,
echelle=région,
montant=mt.engagé)
actions_json <- toJSON(actions)
write_json(actions_json,"../assets/actions_financees2.json")
write.csv(actions,"../assets/actions_2020.csv",row.names = F)
write.csv(actions,"../assets/actions_2020.csv",row.names = F,fileEncoding="UTF-8")
